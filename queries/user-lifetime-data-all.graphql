# Get Contribution Years and Lifetime Data
# 
# The values returned by this query represent the totals for 
# the lifetime of the user. 
{
  user(login: "jxmot") {
    name
    login
    isHireable
    # a list of years the user has contributed
    contributionsCollection {
      hasAnyContributions
      contributionYears
    }
    # Non-owned repository contributions
    repositoriesContributedTo(first: 100) {
      totalCount
      nodes {
        nameWithOwner
        description
      }
    }
    pullRequests(first: 1) {
      totalCount
    }
    issues(first: 1) {
      totalCount
    }
    followers(first: 1) {
      totalCount
    }
    # get the user's collection of repositories, and retrieve the 
    # total number of forks, stars, and watchers for each repo
    repositories(first: 100, isFork: false, ownerAffiliations: OWNER, orderBy: {direction: DESC, field: STARGAZERS}) {
      totalCount
      totalDiskUsage
      # get pagination 
      pageInfo{
        hasNextPage
        hasPreviousPage
      }
      # there are no fields for "commits", it's not available?
      nodes {
        nameWithOwner
        isPrivate
        createdAt
        stargazerCount
        # this does NOT have a separate "count" fields
        watchers(first:1) {
          totalCount
        }
        issues(first:1) {
          totalCount
        }
        pullRequests(first:1) {
          totalCount
        }
        forkCount
      }
    }
  }
}

# The following is POST-ready, it can be used as the body
# in a POST operation. This can be used with Postman.
# {
#   "query": "# Get Contribution Years and Lifetime Data\n{\n  user(login: \"jxmot\") {\n    name\n    login\n    contributionsCollection {\n      hasAnyContributions\n      contributionYears\n    }\n    repositoriesContributedTo(first: 100) {\n      totalCount\n      nodes {\n        nameWithOwner\n      }\n    }\n    pullRequests(first: 1) {\n      totalCount\n    }\n    issues(first: 1) {\n      totalCount\n    }\n    followers {\n      totalCount\n    }\n    repositories(first: 100, isFork: false, ownerAffiliations: OWNER, orderBy: {direction: DESC, field: STARGAZERS}) {\n      totalCount\n      pageInfo{\n        hasNextPage\n        hasPreviousPage\n      }\n      nodes {\n        nameWithOwner\n        isPrivate\n        forkCount\n        stargazerCount\n        watchers {\n          totalCount\n        }\n      }\n    }\n  }\n}\n"
# }
